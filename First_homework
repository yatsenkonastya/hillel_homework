'number' + 3 + 3
Відповідь: number6
// 3 + 3 це числа, котрі можна додати, що в результаті дає 6, в той час коли операнда `number`це string значення, котра контантинується до інших значень.

null + 3
Відповідь: 3
// null це відсутність значення, тобто порожнє місце

5 && "qwerty"
Відповідь: "qwerty"
// Бо && оцінює операнди зліва направо, повертаючи значення першого false, а якщо всі значення true, то повертає значення останнього.

+'40' + +'2' + "hillel";
Відповідь: 42hillel
// Унарний + перетворює операнди в числові значення, тому 40 та 2 сумуються між собою і окремо додається операнда , бо "hillel" це string значення,
котра контантинується до інших значень.

'10' - 5 === 6;
Відповідь: False
// Бо === оператор на ідентичність

true + false
Відповідь: True
// Бо false значення зазвичай отримуються від об'єктів без певного значення, такі як null або undefined. В нашому випадку цей приклад можна представити як 1+0=1.

'4px' - 3
Відповідь: NaN
// Не число, це неможлива математична операція,бо від текстового рядка неможливо відняти числове значення.

'4' - 3
Відповідь: 1
// Операнд '4' був приведений до числового значення 

'6' + 3 ** 0;
Відповідь:61
// Оскільки 3 ** 0(3 в 0 степіні) це 1, а '6' це стрінгове значення,то при додаванні вони контантинуються.

12 / '6'
Відповідь: 2
// Операнд '6' був приведений до числового значення , тому 12/ 2 = 6.

'10' + (5 === 6);
Відповідь:10false
// Значення 5 не ідентичне 6,тому це false, а '10' це стрінгове значення,то при додаванні вони контантинуються.

null == ''
Відповідь: False
// Бо '' це 0 або ж це можна описати як False, в той час як null це відсутнє значення.

3 ** (9 / 3);
Відповідь:27
// Бо 9 /3 = 3, а 3**3, це 3 в третій степені

!!'false' == !!'true'
Відповідь:False
// ! змінює істину в брехню і навпаки, тому приклад буде виглядати як `true` == `false` , що і дає відповідь false

0 || '0' && 1
Відповідь:1
// 1) '0' && 1 ця частина повертає значення 1, бо && оцінює операнди зліва направо, повертаючи значення першого false, а якщо всі значення true, то повертає значення останнього,
в нашому випадку 1
2) 0 || 1 ця частина повертає значення 1 , бо в випадку false || true повертається true.

(+null == false) < 1;
Відповідь: false
// Унарний + переводить (+null) до значення 0, що відповідає значення false, звідси рівняння false == false дорівнює true. А далі рівняння набуває вигляду true < 1,
що є неправильним, оскільки true = 1.

false && true || true
Відповідь: True
// Перша частина (false && true) виводить false, бо && оцінює операнди зліва направо, повертаючи значення першого false.
Друга частина false || true повертає true.

false && (false || true);
Відповідь: False
// Перша частина (false || true) повертає значення true, а друга частина (false && true) виводить false, бо && оцінює операнди зліва направо, 
повертаючи значення першого false.

(+null == false) < 1 ** 5;
Відповідь: False
// 1)Унарний + переводить (+null) до значення 0, що відповідає значення false, звідси рівняння false == false дорівнює true;
2) 1 ** 5 = 1 в п'ятій степені, тобто 1;
3) true < 1 = false. (бо true = 1 )
